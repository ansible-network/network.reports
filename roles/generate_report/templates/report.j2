<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Network Automation Report</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            color: #333;
            background-color: #f5f5f5;
        }
        .header {
            background-color: #fff;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        .logo {
            height: 50px;
        }
        h1 {
            color: #333;
            margin: 20px;
            text-align: center;
        }
        h2 {
            color: #444;
            margin: 15px 0;
        }
        .device-selector {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin: 20px;
            justify-content: center;
        }
        .device-button {
            padding: 10px 15px;
            background-color: #0066cc;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s;
        }
        .device-button:hover {
            background-color: #0055aa;
        }
        .device-button.active {
            background-color: #004488;
        }
        .device-content {
            display: none;
            margin: 0 20px;
        }
        .device-content.active {
            display: block;
        }
        .container {
            display: flex;
            flex-wrap: wrap;
            margin: 0 20px;
        }
        .sidebar {
            flex: 1;
            min-width: 250px;
            background-color: #fff;
            padding: 20px;
            border-radius: 4px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-right: 20px;
            margin-bottom: 20px;
        }
        .main-content {
            flex: 3;
            min-width: 300px;
            background-color: #fff;
            padding: 20px;
            border-radius: 4px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .pdf-button {
            background-color: #e74c3c;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 4px;
            cursor: pointer;
            margin-bottom: 20px;
            display: inline-block;
        }
        .pdf-button:hover {
            background-color: #c0392b;
        }
        .tabs {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
            margin-bottom: 20px;
        }
        .tab-button {
            padding: 10px 15px;
            background-color: #eee;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .tab-button.active {
            background-color: #0066cc;
            color: white;
        }
        .tab-content {
            display: none;
        }
        .tab-content.active {
            display: block;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        .enabled {
            color: green;
        }
        .disabled {
            color: red;
        }
        ul {
            padding-left: 20px;
        }
        @media (max-width: 768px) {
            .container {
                flex-direction: column;
            }
            .sidebar {
                margin-right: 0;
                margin-bottom: 20px;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <div class="header">
        <img class="logo" src="webpage_logo.png" alt="Red Hat Ansible Automation Platform Logo">
        <h1>Network Automation Report</h1>
    </div>

    <!-- Device Selector -->
    <div class="device-selector">
        {% for network_switch in groups['network']|sort %}
            <button class="device-button" data-device="{{ network_switch }}">
                {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch].all_gathered_facts.device_name is defined %}
                    {{ hostvars[network_switch].all_gathered_facts.device_name }}
                {% else %}
                    {{ network_switch }}
                {% endif %}
            </button>
        {% endfor %}
    </div>

    <!-- PDF Download Button -->
    <div style="text-align: center;">
        <button id="download-pdf" class="pdf-button">Download PDF Report</button>
    </div>

    <!-- Device Content -->
    {% for network_switch in groups['network']|sort %}
    <div class="device-content" id="device-{{ network_switch }}">
        <div class="container">
            <!-- Sidebar -->
            <div class="sidebar">
                <h2>Device Information</h2>
                
                <ul>
                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch].all_gathered_facts.device_name is defined %}
                        <li> Hostname : {{ hostvars[network_switch].all_gathered_facts.device_name }}</li>
                    {% else %}
                        <li> Hostname : Not Available</li>
                    {% endif %}
                    
                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch].all_gathered_facts.hardware is defined and hostvars[network_switch].all_gathered_facts.hardware.model is defined %}
                        <li> Model : {{ hostvars[network_switch].all_gathered_facts.hardware.model }}</li>
                    {% endif %}
                    
                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch].all_gathered_facts.os_type is defined %}
                        <li> IOS Type : {{ hostvars[network_switch].all_gathered_facts.os_type }}</li>
                    {% endif %}

                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch].all_gathered_facts.hardware is defined and hostvars[network_switch].all_gathered_facts.hardware.serial_number is defined %}
                        <li> Serial Number : {{ hostvars[network_switch].all_gathered_facts.hardware.serial_number }}</li>
                    {% endif %}

                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch].all_gathered_facts.version is defined %}
                        <li> Version : {{ hostvars[network_switch].all_gathered_facts.version }}</li>
                    {% endif %}

                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch].all_gathered_facts.memory is defined and hostvars[network_switch].all_gathered_facts.memory.free_mb is defined %}
                        <li> Memory Free (MB) : {{ hostvars[network_switch].all_gathered_facts.memory.free_mb }}</li>
                    {% endif %}

                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch].all_gathered_facts.memory is defined and hostvars[network_switch].all_gathered_facts.memory.total_mb is defined %}
                        <li> Memory Total (MB) : {{ hostvars[network_switch].all_gathered_facts.memory.total_mb }}</li>
                    {% endif %}
                </ul>

                <h2> Device IP </h2>
                <ul> 
                    {% if hostvars[network_switch].ansible_host is defined %}
                        <li>{{ hostvars[network_switch].ansible_host }} </li>
                    {% else %}
                        <li>Host information not available</li>
                    {% endif %}
                </ul>
            </div>

            <!-- Main Content -->
            <div class="main-content">
                <!-- Tabs -->
                <div class="tabs">
                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].interfaces is defined %}
                        <button class="tab-button active" data-device="{{ network_switch }}" data-target="interfaces">Interfaces</button>
                    {% endif %}

                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].l2_interfaces is defined %}
                        <button class="tab-button" data-device="{{ network_switch }}" data-target="l2_interfaces">L2 Interfaces</button>
                    {% endif %}

                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].l3_interfaces is defined %}
                        <button class="tab-button" data-device="{{ network_switch }}" data-target="l3_interfaces">L3 Interfaces</button>
                    {% endif %}
                    
                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].ospf_interfaces is defined %}
                        <button class="tab-button" data-device="{{ network_switch }}" data-target="ospf_interfaces">OSPF Interfaces</button>
                    {% endif %}

                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].ospfv2 is defined %}
                        <button class="tab-button" data-device="{{ network_switch }}" data-target="ospfv2">OSPFv2</button>
                    {% endif %}

                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].ospfv3 is defined %}
                        <button class="tab-button" data-device="{{ network_switch }}" data-target="ospfv3">OSPFv3</button>
                    {% endif %}

                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].bgp_global is defined %}
                        <button class="tab-button" data-device="{{ network_switch }}" data-target="bgp_global">BGP Global</button>
                    {% endif %}

                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].bgp_address_family is defined %}
                        <button class="tab-button" data-device="{{ network_switch }}" data-target="bgp_address_family">BGP Address Family</button>
                    {% endif %}
                </div>

                <!-- Interfaces Tab -->
                <div id="interfaces-{{ network_switch }}" class="tab-content active">
                    <h2>Interfaces</h2>
                    <table>
                        <thead>
                            <tr>
                                <th>Interface Name</th>
                                <th>Status</th>
                                <th>Speed</th>
                                <th>Duplex</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].interfaces is defined and hostvars[network_switch]['all_gathered_facts'].interfaces|length > 0 %}
                                {% for interface in hostvars[network_switch]['all_gathered_facts'].interfaces %}
                                <tr>
                                    <td>{{ interface.name }}</td>
                                    <td class="{% if interface.enabled is defined and interface.enabled %}enabled{% else %}disabled{% endif %}">
                                        {{ "Enabled" if interface.enabled is defined and interface.enabled else "Disabled" }}
                                    </td>
                                    <td>{{ interface.speed | default('N/A') }}</td>
                                    <td>{{ interface.duplex | default('N/A') }}</td>
                                </tr>
                                {% endfor %}
                            {% else %}
                                <tr>
                                    <td colspan="4">No interface data available</td>
                                </tr>
                            {% endif %}
                        </tbody>
                    </table>
                </div>

                <!-- L2 Interfaces Tab -->
                <div id="l2_interfaces-{{ network_switch }}" class="tab-content">
                    <h2>L2 Interfaces - Trunk/Access Ports</h2>
                    <table>
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Mode</th>
                                <th>Access VLAN</th>
                                <th>Trunk Native VLAN</th>
                                <th>Trunk Allowed VLANs</th>
                            </tr>
                        </thead>
                        <tbody>
                        {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].l2_interfaces is defined and hostvars[network_switch]['all_gathered_facts'].l2_interfaces|length > 0 %}
                            {% for l2_interface in hostvars[network_switch]['all_gathered_facts'].l2_interfaces %}
                                <tr>
                                    <td>{{l2_interface.name}}</td>
                                    <td>{{l2_interface.mode|default("Not Configured")}}</td>
                                    <td>
                                        {% if l2_interface.access is defined and l2_interface.access.vlan is defined %}
                                            {{l2_interface.access.vlan}}
                                        {% else %}
                                            Not Configured
                                        {% endif %}
                                    </td>
                                    <td>
                                        {% if l2_interface.trunk is defined and l2_interface.trunk.native_vlan is defined %}
                                            {{l2_interface.trunk.native_vlan}}
                                        {% else %}
                                            Not Configured
                                        {% endif %}
                                    </td>
                                    <td>
                                        {% if l2_interface.trunk is defined and l2_interface.trunk.allowed_vlans is defined %}
                                            {{l2_interface.trunk.allowed_vlans}}
                                        {% else %}
                                            Not Configured
                                        {% endif %}
                                    </td>
                                </tr>
                            {% endfor %}
                        {% elif hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].l2_interfaces is defined and hostvars[network_switch]['all_gathered_facts'].l2_interfaces|length == 0 %}
                            <tr><td colspan="5">L2 information is not configured on this device</td></tr>
                        {% else %}
                            <tr><td colspan="5">No L2 information available</td></tr>
                        {% endif %}
                        </tbody>
                    </table>
                </div>

                <!-- L3 Interfaces Tab -->
                <div id="l3_interfaces-{{ network_switch }}" class="tab-content">
                    <h2>L3 Interfaces Configuration</h2>
                    <table>
                        <thead>
                            <tr>
                                <th>Interface Name</th>
                                <th>IPv4 Address</th>
                                <th>IPv6 Address</th>
                            </tr>
                        </thead>
                        <tbody>
                        {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].l3_interfaces is defined and hostvars[network_switch]['all_gathered_facts'].l3_interfaces|length > 0 %}
                            {% for interface in hostvars[network_switch]['all_gathered_facts'].l3_interfaces %}
                                <tr>
                                    <td>{{ interface.name }}</td>
                                    <td>
                                        {% if interface.ipv4 is defined and interface.ipv4|length > 0 %}
                                            {% for ip in interface.ipv4 %}
                                                {% if ip.address is defined %}
                                                    {{ ip.address }}{% if not loop.last %}<br>{% endif %}
                                                {% elif ip.dhcp is defined and ip.dhcp.enable is defined and ip.dhcp.enable %}
                                                    DHCP Enabled
                                                {% else %}
                                                    Not Configured
                                                {% endif %}
                                            {% endfor %}
                                        {% else %}
                                            Not Configured
                                        {% endif %}
                                    </td>
                                    <td>
                                        {% if interface.ipv6 is defined and interface.ipv6|length > 0 %}
                                            {% for ip in interface.ipv6 %}
                                                {% if ip.address is defined %}
                                                    {{ ip.address }}{% if not loop.last %}<br>{% endif %}
                                                {% else %}
                                                    Not Configured
                                                {% endif %}
                                            {% endfor %}
                                        {% else %}
                                            Not Configured
                                        {% endif %}
                                    </td>
                                </tr>
                            {% endfor %}
                        {% elif hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].l3_interfaces is defined and hostvars[network_switch]['all_gathered_facts'].l3_interfaces|length == 0 %}
                            <tr>
                                <td colspan="3">L3 information is not configured on this device</td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="3">No L3 information available</td>
                            </tr>
                        {% endif %}
                        </tbody>
                    </table>
                </div>

                <!-- OSPF Interfaces Tab -->
                <div id="ospf_interfaces-{{ network_switch }}" class="tab-content">
                    <h2>OSPF Interfaces Configuration</h2>

                    {# Cisco IOS Devices #}
                    {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].ansible_network_os is defined and hostvars[network_switch]['all_gathered_facts'].ansible_network_os == 'cisco.ios.ios' and hostvars[network_switch]['all_gathered_facts'].ospf_interfaces is defined %}
                        <table>
                            <thead>
                                <tr>
                                    <th>Interface Name</th>
                                    <th>Area ID</th>
                                    <th>Address Family</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% if hostvars[network_switch]['all_gathered_facts'].ospf_interfaces|length > 0 %}
                                    {% for interface in hostvars[network_switch]['all_gathered_facts'].ospf_interfaces %}
                                        {% if interface.address_family is defined and interface.address_family|length > 0 %}
                                            {% for af in interface.address_family %}
                                                <tr>
                                                    <td>{{ interface.name }}</td>
                                                    <td>
                                                        {% if af.processes is defined and af.processes|length > 0 and af.processes[0].area is defined and af.processes[0].area.area_id is defined %}
                                                            {{ af.processes[0].area.area_id }}
                                                        {% else %}
                                                            Not Configured
                                                        {% endif %}
                                                    </td>
                                                    <td>{{ af.afi|default("Not Configured") }}</td>
                                                </tr>
                                            {% endfor %}
                                        {% else %}
                                            <tr>
                                                <td>{{ interface.name }}</td>
                                                <td colspan="2">No OSPF configuration</td>
                                            </tr>
                                        {% endif %}
                                    {% endfor %}
                                {% else %}
                                    <tr><td colspan="3">No OSPF interfaces are configured on this device</td></tr>
                                {% endif %}
                            </tbody>
                        </table>

                    {# Cisco NX-OS Devices #}
                    {% elif hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].ansible_network_os is defined and hostvars[network_switch]['all_gathered_facts'].ansible_network_os == 'cisco.nxos.nxos' and hostvars[network_switch]['all_gathered_facts'].ospf_interfaces is defined %}
                        <table>
                            <thead>
                                <tr>
                                    <th>Interface Name</th>
                                    <th>Area ID</th>
                                    <th>Address Family</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% if hostvars[network_switch]['all_gathered_facts'].ospf_interfaces|length > 0 %}
                                    {% for interface in hostvars[network_switch]['all_gathered_facts'].ospf_interfaces %}
                                        {% if interface.address_family is defined and interface.address_family|length > 0 %}
                                            {% for af in interface.address_family %}
                                                {% if af.processes is defined and af.processes|length > 0 %}
                                                    {% for process in af.processes %}
                                                        <tr>
                                                            <td>{{ interface.name }}</td>
                                                            <td>
                                                                {% if process.area is defined and process.area.area_id is defined %}
                                                                    {{ process.area.area_id }}
                                                                {% else %}
                                                                    Not Configured
                                                                {% endif %}
                                                            </td>
                                                            <td>{{ af.afi | default("Not Configured") }}</td>
                                                        </tr>
                                                    {% endfor %}
                                                {% else %}
                                                    <tr>
                                                        <td>{{ interface.name }}</td>
                                                        <td colspan="2">No OSPF process configuration</td>
                                                    </tr>
                                                {% endif %}
                                            {% endfor %}
                                        {% else %}
                                            <tr>
                                                <td>{{ interface.name }}</td>
                                                <td colspan="2">No OSPF configuration</td>
                                            </tr>
                                        {% endif %}
                                    {% endfor %}
                                {% else %}
                                    <tr><td colspan="3">No OSPF interfaces are configured on this device</td></tr>
                                {% endif %}
                            </tbody>
                        </table>

                    {# Arista EOS Devices #}
                    {% elif hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].ansible_network_os is defined and hostvars[network_switch]['all_gathered_facts'].ansible_network_os == 'arista.eos.eos' and hostvars[network_switch]['all_gathered_facts'].ospf_interfaces is defined %}
                        <table>
                            <thead>
                                <tr>
                                    <th>Interface Name</th>
                                    <th>Area ID</th>
                                    <th>Address Family</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% if hostvars[network_switch]['all_gathered_facts'].ospf_interfaces|length > 0 %}
                                    {% for interface in hostvars[network_switch]['all_gathered_facts'].ospf_interfaces %}
                                        {% if interface.address_family is defined and interface.address_family|length > 0 %}
                                            {% for af in interface.address_family %}
                                                <tr>
                                                    <td>{{ interface.name }}</td>
                                                    <td>
                                                        {% if af.area is defined and af.area.area_id is defined %}
                                                            {{ af.area.area_id }}
                                                        {% else %}
                                                            Not Configured
                                                        {% endif %}
                                                    </td>
                                                    <td>{{ af.afi|default("Not Configured") }}</td>
                                                </tr>
                                            {% endfor %}
                                        {% else %}
                                            <tr>
                                                <td>{{ interface.name }}</td>
                                                <td colspan="2">No OSPF configuration</td>
                                            </tr>
                                        {% endif %}
                                    {% endfor %}
                                {% else %}
                                    <tr><td colspan="3">No OSPF interfaces are configured on this device</td></tr>
                                {% endif %}
                            </tbody>
                        </table>

                    {# Cisco IOS XR Devices #}
                    {% elif hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].ansible_network_os is defined and hostvars[network_switch]['all_gathered_facts'].ansible_network_os == 'cisco.iosxr.iosxr' and hostvars[network_switch]['all_gathered_facts'].ospf_interfaces is defined %}
                        <table>
                            <thead>
                                <tr>
                                    <th>Interface Name</th>
                                    <th>Area ID</th>
                                    <th>Address Family</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% if hostvars[network_switch]['all_gathered_facts'].ospf_interfaces|length > 0 %}
                                    {% for interface in hostvars[network_switch]['all_gathered_facts'].ospf_interfaces %}
                                        {% if interface.address_family is defined and interface.address_family|length > 0 %}
                                            {% for af in interface.address_family %}
                                                <tr>
                                                    <td>{{ interface.name }}</td>
                                                    <td>
                                                        {% if af.processes is defined and af.processes|length > 0 %}
                                                            {% for process in af.processes %}
                                                                {% if process.area is defined and process.area.area_id is defined %}
                                                                    {{ process.area.area_id }}
                                                                {% else %}
                                                                    Not Configured
                                                                {% endif %}
                                                            {% endfor %}
                                                        {% else %}
                                                            Not Configured
                                                        {% endif %}
                                                    </td>
                                                    <td>{{ af.afi|default("Not Configured") }}</td>
                                                </tr>
                                            {% endfor %}
                                        {% else %}
                                            <tr>
                                                <td>{{ interface.name }}</td>
                                                <td colspan="2">No OSPF configuration</td>
                                            </tr>
                                        {% endif %}
                                    {% endfor %}
                                {% else %}
                                    <tr><td colspan="3">No OSPF interfaces are configured on this device</td></tr>
                                {% endif %}
                            </tbody>
                        </table>

                    {% else %}
                        <p>No OSPF interface information available for this device.</p>
                    {% endif %}
                </div>

                <!-- OSPFv2 Tab -->
                <div id="ospfv2-{{ network_switch }}" class="tab-content">
                    <h2>OSPFv2 Configuration</h2>
                    
                    <table>
                        <thead>
                            <tr>
                                <th>Process ID</th>
                                <th>Router ID</th>
                                <th>Networks</th>
                            </tr>
                        </thead>
                        <tbody>
                        {# Cisco IOS & NX-OS Devices #}
                        {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].ospfv2 is defined and hostvars[network_switch]['all_gathered_facts'].ospfv2.processes is defined and hostvars[network_switch]['all_gathered_facts'].ospfv2.processes|length > 0 %}
                            {% for ospf_process in hostvars[network_switch]['all_gathered_facts'].ospfv2.processes %}
                            <tr>
                                <td>{{ ospf_process.process_id }}</td>
                                <td>{{ ospf_process.router_id|default("Not Configured") }}</td>
                                <td>
                                    {% if ospf_process.networks is defined and ospf_process.networks|length > 0 %}
                                    <ul>
                                        {% for network in ospf_process.networks %}
                                        <li>{{ network.prefix }} (Area {{ network.area }})</li>
                                        {% endfor %}
                                    </ul>
                                    {% else %}
                                    No networks configured
                                    {% endif %}
                                </td>
                            </tr>
                            {% endfor %}
                        {% elif hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].ospfv2 is defined and (hostvars[network_switch]['all_gathered_facts'].ospfv2.processes is not defined or hostvars[network_switch]['all_gathered_facts'].ospfv2.processes|length == 0) %}
                            <tr><td colspan="3">OSPF is not configured on this device</td></tr>
                        {% else %}
                            <tr><td colspan="3">No OSPF information available</td></tr>
                        {% endif %}
                        </tbody>
                    </table>
                </div>

                <!-- OSPFv3 Global Tab -->
                <div id="ospfv3-{{ network_switch }}" class="tab-content">
                    <h2>OSPFv3 Global Configuration</h2>
                    <table>
                        <thead>
                            <tr>
                                <th>Parameter</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% if hostvars[network_switch].all_gathered_facts is defined and hostvars[network_switch]['all_gathered_facts'].ospfv3 is defined and hostvars[network_switch]['all_gathered_facts'].ospfv3.processes is defined and hostvars[network_switch]['all_gathered_facts'].ospfv3.processes|length > 0 %}
                    {% for process in hostvars[network_switch]['all_gathered_facts'].ospfv3.processes %}
                    <tr>
                        <td>Process ID</td>
                        <td>{{ process.process_id }}</td>
                    </tr>
                    {% if process.router_id is defined %}
                    <tr>
                        <td>Router ID</td>
                        <td>{{ process.router_id }}</td>
                    </tr>
                    {% endif %}
                    <tr>
                        <td>Address Family</td>
                        <td>
                            {% if process.address_family is defined and process.address_family.afi is defined and process.address_family.safi is defined %}
                                {{ process.address_family.afi }} {{ process.address_family.safi }}
                            {% else %}
                                Not configured
                            {% endif %}
                        </td>
                    </tr>
                    {% endfor %}
                {% else %}
                <tr>
                    <td colspan="2">No OSPFv3 global configuration available</td>
                </tr>
                {% endif %}
                        </tbody>
                    </table>
                </div>

                <!-- BGP Global Tab -->
                <div id="bgp_global-{{ network_switch }}" class="tab-content">
                    <h2>BGP Global Configuration</h2>
                    <table>
                        <thead>
                            <tr>
                                <th>Parameter</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% if hostvars[network_switch]['all_gathered_facts'] is defined and hostvars[network_switch]['all_gathered_facts'].bgp_global is defined %}
                            <tr>
                                <td>AS Number</td>
                                <td>{{ hostvars[network_switch]['all_gathered_facts'].bgp_global.as_number }}</td>
                            </tr>
                            {% if hostvars[network_switch]['all_gathered_facts'].bgp_global.router_id is defined %}
                            <tr>
                                <td>Router ID</td>
                                <td>{{ hostvars[network_switch]['all_gathered_facts'].bgp_global.router_id }}</td>
                            </tr>
                            {% endif %}
                            {% if hostvars[network_switch]['all_gathered_facts'].bgp_global.bgp is defined and hostvars[network_switch]['all_gathered_facts'].bgp_global.bgp.router_id is defined %}
                            <tr>
                                <td>Router ID</td>
                                <td>{{ hostvars[network_switch]['all_gathered_facts'].bgp_global.bgp.router_id }}</td>
                            </tr>
                            {% endif %}

                            {% if hostvars[network_switch]['all_gathered_facts'].bgp_global.bgp is defined %}
                            <tr>
                                <td>BGP Settings</td>
                                <td>
                                    {% if hostvars[network_switch]['all_gathered_facts'].bgp_global.bgp.log_neighbor_changes is defined %}
                                    Log Neighbor Changes: {{ hostvars[network_switch]['all_gathered_facts'].bgp_global.bgp.log_neighbor_changes }}
                                    {% endif %}
                                    
                                    {% if hostvars[network_switch]['all_gathered_facts'].bgp_global.bgp.default is defined and hostvars[network_switch]['all_gathered_facts'].bgp_global.bgp.default.ipv4_unicast is defined %}
                                    <br>IPv4 Unicast: {{ hostvars[network_switch]['all_gathered_facts'].bgp_global.bgp.default.ipv4_unicast }}
                                    {% endif %}
                                </td>
                            </tr>
                            {% endif %}

                            {% if hostvars[network_switch]['all_gathered_facts'].bgp_global.timers is defined and hostvars[network_switch]['all_gathered_facts'].bgp_global.timers.bgp is defined %}
                            {% if hostvars[network_switch]['all_gathered_facts'].bgp_global.timers.bgp.keepalive is defined %}
                            <tr>
                                <td>Keepalive Timer</td>
                                <td>{{ hostvars[network_switch]['all_gathered_facts'].bgp_global.timers.bgp.keepalive }} seconds</td>
                            </tr>
                            {% endif %}
                            {% if hostvars[network_switch]['all_gathered_facts'].bgp_global.timers.bgp.holdtime is defined %}
                            <tr>
                                <td>Holdtime</td>
                                <td>{{ hostvars[network_switch]['all_gathered_facts'].bgp_global.timers.bgp.holdtime }} seconds</td>
                            </tr>
                            {% endif %}
                            {% endif %}

                            {% if hostvars[network_switch]['all_gathered_facts'].bgp_global.timers is defined and hostvars[network_switch]['all_gathered_facts'].bgp_global.timers.keepalive_time is defined %}
                            <tr>
                                <td>Keepalive Timer</td>
                                <td>{{ hostvars[network_switch]['all_gathered_facts'].bgp_global.timers.keepalive_time }} seconds</td>
                            </tr>
                            {% if hostvars[network_switch]['all_gathered_facts'].bgp_global.timers.holdtime is defined %}
                            <tr>
                                <td>Holdtime</td>
                                <td>{{ hostvars[network_switch]['all_gathered_facts'].bgp_global.timers.holdtime }} seconds</td>
                            </tr>
                            {% endif %}
                            {% endif %}

                            {% else %}
                            <tr>
                                <td colspan="2">No BGP global configuration available</td>
                            </tr>
                            {% endif %}
                        </tbody>
                    </table>
                </div>

                <!-- BGP Address Family Tab -->
                <div id="bgp_address_family-{{ network_switch }}" class="tab-content">
                    <h2>BGP Address Family Configuration</h2>

                    {% if hostvars[network_switch]['all_gathered_facts'] is defined and hostvars[network_switch]['all_gathered_facts'].ansible_network_os is defined %}
                    
                    {% if hostvars[network_switch]['all_gathered_facts'].ansible_network_os == 'arista.eos.eos' %}
                    <!-- Table for EOS Devices -->
                    <table>
                        <thead>
                            <tr>
                                <th>Neighbor Address</th>
                                <th>Remote AS</th>
                                <th>Maximum Received Routes</th>
                                <th>IPv4 Networks Configured</th>
                                <th>Timers (Keepalive / Holdtime)</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% if hostvars[network_switch]['all_gathered_facts'].bgp_global is defined and hostvars[network_switch]['all_gathered_facts'].bgp_global.neighbor is defined %}
                                {% for neighbor in hostvars[network_switch]['all_gathered_facts'].bgp_global.neighbor %}
                                    <tr>
                                        <td>
                                            {{ neighbor.neighbor_address }}
                                        </td>
                                        <td>
                                            {% if neighbor.remote_as is defined %}
                                                {{ neighbor.remote_as }}
                                            {% else %}
                                                Not configured
                                            {% endif %}
                                        </td>
                                        <td>
                                            {% if neighbor.maximum_received_routes is defined and neighbor.maximum_received_routes.count is defined %}
                                                {{ neighbor.maximum_received_routes.count }}
                                            {% else %}
                                                Not configured
                                            {% endif %}
                                        </td>
                                        <td>
                                            {% if hostvars[network_switch]['all_gathered_facts'].bgp_global.network is defined %}
                                                <ul>
                                                    {% for network in hostvars[network_switch]['all_gathered_facts'].bgp_global.network %}
                                                        {% if network.address is defined and network.address is match("^\d+\.\d+\.\d+\.\d+") %}
                                                            <li>{{ network.address }}</li>
                                                        {% endif %}
                                                    {% endfor %}
                                                </ul>
                                            {% else %}
                                                No IPv4 networks configured
                                            {% endif %}
                                        </td>
                                        <td>
                                            {% if hostvars[network_switch]['all_gathered_facts'].bgp_global.timers is defined %}
                                                {% if hostvars[network_switch]['all_gathered_facts'].bgp_global.timers.keepalive is defined and hostvars[network_switch]['all_gathered_facts'].bgp_global.timers.holdtime is defined %}
                                                    Keepalive: {{ hostvars[network_switch]['all_gathered_facts'].bgp_global.timers.keepalive }} / Holdtime: {{ hostvars[network_switch]['all_gathered_facts'].bgp_global.timers.holdtime }}    
                                                {% else %}
                                                    Not configured
                                                {% endif %}
                                            {% else %}
                                                Not configured
                                            {% endif %}
                                        </td>
                                    </tr>
                                {% endfor %}
                            {% else %}
                                <tr>
                                    <td colspan="5">No BGP neighbors configured</td>
                                </tr>
                            {% endif %}
                        </tbody>
                    </table>

                    {% elif hostvars[network_switch]['all_gathered_facts'].ansible_network_os == 'cisco.ios.ios' %}
                    <!-- Table for IOS Devices -->
                    <table>
                        <thead>
                            <tr>
                                <th>Neighbor Address</th>
                                <th>Remote AS</th>
                                <th>Maximum Received Routes</th>
                                <th>IPv4 Networks Configured</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% if hostvars[network_switch]['all_gathered_facts'].bgp_global is defined and hostvars[network_switch]['all_gathered_facts'].bgp_global.neighbor is defined %}
                                {% for neighbor in hostvars[network_switch]['all_gathered_facts'].bgp_global.neighbor %}
                                    <tr>
                                        <td>
                                            {{ neighbor.neighbor_address }}
                                        </td>
                                        <td>
                                            {% if neighbor.remote_as is defined %}
                                                {{ neighbor.remote_as }}
                                            {% else %}
                                                Not configured
                                            {% endif %}
                                        </td>
                                        <td>
                                            {% if neighbor.maximum_received_routes is defined and neighbor.maximum_received_routes.count is defined %}
                                                {{ neighbor.maximum_received_routes.count }}
                                            {% else %}
                                                Not configured
                                            {% endif %}
                                        </td>
                                        <td>
                                            {% if hostvars[network_switch]['all_gathered_facts'].bgp_global.network is defined %}
                                                <ul>
                                                    {% for network in hostvars[network_switch]['all_gathered_facts'].bgp_global.network %}
                                                        {% if network.address is defined and network.address is match("^\d+\.\d+\.\d+\.\d+") %}
                                                            <li>{{ network.address }}</li>
                                                        {% endif %}
                                                    {% endfor %}
                                                </ul>
                                            {% else %}
                                                No IPv4 networks configured
                                            {% endif %}
                                        </td>
                                    </tr>
                                {% endfor %}
                            {% else %}
                                <tr>
                                    <td colspan="4">No BGP neighbors configured</td>
                                </tr>
                            {% endif %}
                        </tbody>
                    </table>

                    {% elif hostvars[network_switch]['all_gathered_facts'].ansible_network_os == 'cisco.nxos.nxos' %}
                    <!-- Table for NXOS Devices -->
                    <table>
                        <thead>
                            <tr>
                                <th>Address Family</th>
                                <th>AS Number</th>
                                <th>Networks</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% if hostvars[network_switch]['all_gathered_facts'].bgp_address_family is defined %}
                                {% if hostvars[network_switch]['all_gathered_facts'].bgp_address_family.address_family is defined %}
                                    {% for af in hostvars[network_switch]['all_gathered_facts'].bgp_address_family.address_family %}
                                        <tr>
                                            <td>
                                                {% if af.afi is defined %}{{ af.afi }}{% else %}Unknown{% endif %}
                                                {% if af.safi is defined %} / {{ af.safi }}{% endif %}
                                            </td>
                                            <td>
                                                {% if hostvars[network_switch]['all_gathered_facts'].bgp_address_family.as_number is defined %}
                                                    {{ hostvars[network_switch]['all_gathered_facts'].bgp_address_family.as_number }}
                                                {% else %}
                                                    Not configured
                                                {% endif %}
                                            </td>
                                            <td>
                                                {% if af.networks is defined %}
                                                    <ul>
                                                        {% for network in af.networks %}
                                                            {% if network.prefix is defined %}
                                                                <li>{{ network.prefix }}</li>
                                                            {% else %}
                                                                Not configured
                                                            {% endif %}
                                                        {% endfor %}
                                                    </ul>
                                                {% else %}
                                                    No networks configured
                                                {% endif %}
                                            </td>
                                        </tr>
                                    {% endfor %}
                                {% else %}
                                    <tr>
                                        <td colspan="3">No address families configured</td>
                                    </tr>
                                {% endif %}
                            {% else %}
                                <tr>
                                    <td colspan="3">No BGP Address Family configuration available</td>
                                </tr>
                            {% endif %}
                        </tbody>
                    </table>
                    {% else %}
                    <p>Unknown network OS: {{ hostvars[network_switch]['all_gathered_facts'].ansible_network_os }}</p>
                    {% endif %}
                    {% else %}
                    <p>No network OS information available</p>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
    {% endfor %}

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize - show first device
            const devices = document.querySelectorAll('.device-button');
            if (devices.length > 0) {
                const firstDevice = devices[0];
                const deviceId = firstDevice.getAttribute('data-device');
                showDevice(deviceId);
                firstDevice.classList.add('active');
            }

            // Device button click handlers
            document.querySelectorAll('.device-button').forEach(button => {
                button.addEventListener('click', function() {
                    const deviceId = this.getAttribute('data-device');
                    
                    // Deactivate all device buttons
                    document.querySelectorAll('.device-button').forEach(btn => {
                        btn.classList.remove('active');
                    });
                    
                    // Activate clicked button
                    this.classList.add('active');
                    
                    // Show selected device content
                    showDevice(deviceId);
                });
            });

            // Tab button click handlers
            document.querySelectorAll('.tab-button').forEach(button => {
                button.addEventListener('click', function() {
                    const deviceId = this.getAttribute('data-device');
                    const tabId = this.getAttribute('data-target');
                    
                    // Deactivate all tabs for this device
                    document.querySelectorAll(`.tab-button[data-device="${deviceId}"]`).forEach(btn => {
                        btn.classList.remove('active');
                    });
                    
                    // Hide all tab content for this device
                    document.querySelectorAll(`#device-${deviceId} .tab-content`).forEach(content => {
                        content.classList.remove('active');
                    });
                    
                    // Activate clicked tab
                    this.classList.add('active');
                    
                    // Show selected tab content
                    document.getElementById(`${tabId}-${deviceId}`).classList.add('active');
                });
            });

            // PDF Download
            document.getElementById('download-pdf').addEventListener('click', function() {
                window.open('network_report.pdf');
            });

            // Function to show a specific device
            function showDevice(deviceId) {
                // Hide all device content
                document.querySelectorAll('.device-content').forEach(content => {
                    content.classList.remove('active');
                });
                
                // Show selected device content
                document.getElementById(`device-${deviceId}`).classList.add('active');
                
                // Activate first tab for this device
                const firstTab = document.querySelector(`#device-${deviceId} .tab-button`);
                if (firstTab) {
                    const tabId = firstTab.getAttribute('data-target');
                    
                    // Deactivate all tabs
                    document.querySelectorAll(`#device-${deviceId} .tab-button`).forEach(btn => {
                        btn.classList.remove('active');
                    });
                    
                    // Hide all tab content
                    document.querySelectorAll(`#device-${deviceId} .tab-content`).forEach(content => {
                        content.classList.remove('active');
                    });
                    
                    // Activate first tab
                    firstTab.classList.add('active');
                    
                    // Show first tab content
                    document.getElementById(`${tabId}-${deviceId}`).classList.add('active');
                }
            }
        });
    </script>
</body>
</html>
